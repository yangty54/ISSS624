---
title: "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods"
subtitle: "Take-home Ex2"
editor: visual
author: Yang Tianyi
execute: 
  warning: false
  message: false
format: html
---

# Overview

## Introduction

The process of creating regions is called [regionalisation](https://www.researchgate.net/publication/28153673_Supervised_Regionalization_Methods_A_Survey/link/0fcfd5094046b13d35000000/download). A regionalisation is a special kind of clustering where the objective is to group observations which are similar in their statistical attributes, but also in their spatial location. In this sense, regionalization embeds the same logic as standard clustering techniques, but also applies a series of geographical constraints. Often, these constraints relate to connectivity: two candidates can only be grouped together in the same region if there exists a path from one member to another member that never leaves the region. These paths often model the spatial relationships in the data, such as contiguity or proximity. However, connectivity does not always need to hold for all regions, and in certain contexts it makes sense to relax connectivity or to impose different types of geographic constraints.

## Objectives

In this take-home exercise you are required to regionalise Nigeria by using, but not limited to the following measures:

-   Total number of functional water points

-   Total number of nonfunctional water points

-   Percentage of functional water points

-   Percentage of non-functional water points

-   Percentage of main water point technology (i.e. Hand Pump)

-   Percentage of usage capacity (i.e. \< 1000, \>=1000)

-   Percentage of rural water points

# The Data

### Apstial data

For the purpose of this assignment, data from [WPdx Global Data Repositories](https://www.waterpointdata.org/access-data/) will be used. There are two versions of the data. They are: WPdx-Basic and WPdx+. You are required to use WPdx+ data set.

### Geospatial data

Nigeria Level-2 Administrative Boundary (also known as Local Government Area) polygon features GIS data will be used in this take-home exercise. The data can be downloaded either from The [Humanitarian Data Exchange](https://data.humdata.org/) portal or [geoBoundaries](https://www.geoboundaries.org/).

### R Package Installation

Before we get started, it is important for us to install the necessary R packages into R and launch these R packages into R environment.

The R packages needed for this exercise are as follows:

-   Spatial data handling

    -   **sf**, **rgdal** and **spdep**

-   Attribute data handling

    -   **tidyverse**, especially **readr**, **ggplot2** and **dplyr**

-   Choropleth mapping

    -   **tmap**

-   Multivariate data visualisation and analysis

    -   **coorplot**, **ggpubr**, and **heatmaply**

-   Cluster analysis

    -   **cluster**

    -   **ClustGeo**

The code chunks below installs and launches these R packages into R environment.

```{r}
pacman::p_load(rgdal, spdep, tmap, sf, ClustGeo, 
               ggpubr, cluster, factoextra, NbClust,
               heatmaply, corrplot, psych, tidyverse, GGally)
```

## Importing Geospatial Data from Filtered Data

In the previous in-class Exercise 2 data, two geospatial data sets were being used, they are:

-   geo_export

-   nga_admbnda_adm2_osgof_20190417

Specific water point geospatial data was first imported and filtered in the In-class exercise 2 section.

Next, `write_rds()` of readr package was used to save the extracted sf data table (i.e. wp) into an output file in rds data format. The output file is called *nga_wp.rds* and it is saved in *data* sub-folder.

With `filter()` of dplyr is used to select functional and non-functional water point data, `select()` of **dplyr** is used to retain a small size file with only field 3,4,9,10, 18,19,20,21,22,and 23.

After these complete clearing part, the raw data was deleted away to prevent large file storage issue. The following part of data wrangling imports the filtered data into the environment.

## Reading the Spatial Distribution of Water Points

First, we are going to import the water point geospatial data (i.e. nga_wp) by using the code chunk below.

```{r}
nga_wp <- read_rds("data/nigeria_wp.rds")
```

# Data Wrangling

## Working with Projection

Map projection is an important property of a geospatial data. In order to perform geoprocessing using two geospatial data, we need to ensure that both geospatial data are projected using similar coordinate system. The technical term of this process is called **projection transformation**.

### Assigning EPSG code to a simple feature data frame

One of the common issue that can happen during importing geospatial data into R is that the coordinate system of the source data was either missing (such as due to missing .proj for ESRI shapefile) or wrongly assigned during the importing process.

The water point data of `nga_wp` will be run through *st_crs()* of *sf* package as shown in the code chunk below.

```{r}
st_crs(nga_wp)
```

This code indicates that the EPSG is 4326. This is a wrong EPSG code because the correct EPSG code for the task should be a choice between 26391, 26392, and 26303. Therefore, transformation of EPSG is needed, *st_set_crs()* of **sf** package is used as shown in the code chunk below.

```{r}
NIGERIA <- st_transform(nga_wp, 26391)
```

Now, let us check the CSR again by using the code chunk below.

```{r}
st_crs(NIGERIA)
```

Notice that the EPSG code is 26391 now.

The summary of the filtered data is shown below:

```{r}
summary(NIGERIA)
```

```{r}
head(NIGERIA)
```

## 
